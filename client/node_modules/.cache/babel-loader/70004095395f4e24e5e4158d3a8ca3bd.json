{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nimport { isString, isObject, invariant, pullOutRequestInit, isFunction, isPositiveNumber } from './utils';\nimport { useContext, useMemo } from 'react';\nimport FetchContext from './FetchContext';\nimport defaults, { useFetchArgsDefaults } from './defaults';\nexport default function useFetchArgs(urlOrPathOrOptionsOrOverwriteGlobalOptions, optionsOrOverwriteGlobalOrDeps, deps) {\n  invariant(!(isObject(urlOrPathOrOptionsOrOverwriteGlobalOptions) && isObject(optionsOrOverwriteGlobalOrDeps)), 'You cannot have a 2nd parameter of useFetch as object when your first argument is an object.');\n  var context = useContext(FetchContext);\n  var host = useMemo(function () {\n    var maybeHost = urlOrPathOrOptionsOrOverwriteGlobalOptions;\n    if (isString(maybeHost) && maybeHost.includes('://')) return maybeHost;\n    if (context.url) return context.url;\n    return defaults.host;\n  }, [context.url, urlOrPathOrOptionsOrOverwriteGlobalOptions]);\n  var path = useMemo(function () {\n    var maybePath = urlOrPathOrOptionsOrOverwriteGlobalOptions;\n    if (isString(maybePath) && !maybePath.includes('://')) return maybePath;\n  }, [urlOrPathOrOptionsOrOverwriteGlobalOptions]);\n  var overwriteGlobalOptions = useMemo(function () {\n    if (isFunction(urlOrPathOrOptionsOrOverwriteGlobalOptions)) return urlOrPathOrOptionsOrOverwriteGlobalOptions;\n    if (isFunction(optionsOrOverwriteGlobalOrDeps)) return optionsOrOverwriteGlobalOrDeps;\n  }, []);\n  var options = useMemo(function () {\n    var localOptions = {\n      headers: {}\n    };\n\n    if (isObject(urlOrPathOrOptionsOrOverwriteGlobalOptions)) {\n      localOptions = urlOrPathOrOptionsOrOverwriteGlobalOptions;\n    } else if (isObject(optionsOrOverwriteGlobalOrDeps)) {\n      localOptions = optionsOrOverwriteGlobalOrDeps;\n    }\n\n    var globalOptions = context.options;\n\n    var finalOptions = __assign(__assign(__assign(__assign({}, defaults), globalOptions), localOptions), {\n      headers: __assign(__assign(__assign({}, defaults.headers), globalOptions.headers), localOptions.headers),\n      interceptors: __assign(__assign(__assign({}, defaults.interceptors), globalOptions.interceptors), localOptions.interceptors)\n    });\n\n    if (overwriteGlobalOptions) return overwriteGlobalOptions(finalOptions);\n    return finalOptions;\n  }, [urlOrPathOrOptionsOrOverwriteGlobalOptions, overwriteGlobalOptions, context.options]);\n  var requestInit = useMemo(function () {\n    return pullOutRequestInit(options);\n  }, [options]);\n  var dependencies = useMemo(function () {\n    if (Array.isArray(optionsOrOverwriteGlobalOrDeps)) return optionsOrOverwriteGlobalOrDeps;\n    if (Array.isArray(deps)) return deps;\n    return defaults.dependencies;\n  }, [optionsOrOverwriteGlobalOrDeps, deps]);\n  var cacheLife = options.cacheLife,\n      retries = options.retries,\n      retryDelay = options.retryDelay,\n      retryOn = options.retryOn;\n  invariant(Number.isInteger(cacheLife) && cacheLife >= 0, '`cacheLife` must be a number >= 0');\n  invariant(Number.isInteger(retries) && retries >= 0, '`retries` must be a number >= 0');\n  invariant(isFunction(retryDelay) || Number.isInteger(retryDelay) && retryDelay >= 0, '`retryDelay` must be a positive number or a function returning a positive number.');\n  var isValidRetryOn = isFunction(retryOn) || Array.isArray(retryOn) && retryOn.every(isPositiveNumber);\n  invariant(isValidRetryOn, '`retryOn` must be an array of positive numbers or a function returning a boolean.');\n  var loading = options.loading || Array.isArray(dependencies);\n  var interceptors = useMemo(function () {\n    var final = {};\n    if ('request' in options.interceptors) final.request = options.interceptors.request;\n    if ('response' in options.interceptors) final.response = options.interceptors.response;\n    return final;\n  }, [options]);\n  var customOptions = useMemo(function () {\n    var customOptionKeys = Object.keys(useFetchArgsDefaults.customOptions); // Array<keyof CustomOptions>\n\n    var customOptions = customOptionKeys.reduce(function (opts, key) {\n      opts[key] = options[key];\n      return opts;\n    }, {});\n    return __assign(__assign({}, customOptions), {\n      interceptors: interceptors,\n      loading: loading\n    });\n  }, [interceptors, loading]);\n  return {\n    host: host,\n    path: path,\n    customOptions: customOptions,\n    requestInit: requestInit,\n    dependencies: dependencies\n  };\n}","map":{"version":3,"sources":["/Users/rachelmadison/lab-3-fixed-team-37/client/node_modules/use-http/dist/esm/useFetchArgs.js"],"names":["__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","isString","isObject","invariant","pullOutRequestInit","isFunction","isPositiveNumber","useContext","useMemo","FetchContext","defaults","useFetchArgsDefaults","useFetchArgs","urlOrPathOrOptionsOrOverwriteGlobalOptions","optionsOrOverwriteGlobalOrDeps","deps","context","host","maybeHost","includes","url","path","maybePath","overwriteGlobalOptions","options","localOptions","headers","globalOptions","finalOptions","interceptors","requestInit","dependencies","Array","isArray","cacheLife","retries","retryDelay","retryOn","Number","isInteger","isValidRetryOn","every","loading","final","request","response","customOptions","customOptionKeys","keys","reduce","opts","key"],"mappings":"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","sourcesContent":["var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nimport { isString, isObject, invariant, pullOutRequestInit, isFunction, isPositiveNumber } from './utils';\nimport { useContext, useMemo } from 'react';\nimport FetchContext from './FetchContext';\nimport defaults, { useFetchArgsDefaults } from './defaults';\nexport default function useFetchArgs(urlOrPathOrOptionsOrOverwriteGlobalOptions, optionsOrOverwriteGlobalOrDeps, deps) {\n    invariant(!(isObject(urlOrPathOrOptionsOrOverwriteGlobalOptions) && isObject(optionsOrOverwriteGlobalOrDeps)), 'You cannot have a 2nd parameter of useFetch as object when your first argument is an object.');\n    var context = useContext(FetchContext);\n    var host = useMemo(function () {\n        var maybeHost = urlOrPathOrOptionsOrOverwriteGlobalOptions;\n        if (isString(maybeHost) && maybeHost.includes('://'))\n            return maybeHost;\n        if (context.url)\n            return context.url;\n        return defaults.host;\n    }, [context.url, urlOrPathOrOptionsOrOverwriteGlobalOptions]);\n    var path = useMemo(function () {\n        var maybePath = urlOrPathOrOptionsOrOverwriteGlobalOptions;\n        if (isString(maybePath) && !maybePath.includes('://'))\n            return maybePath;\n    }, [urlOrPathOrOptionsOrOverwriteGlobalOptions]);\n    var overwriteGlobalOptions = useMemo(function () {\n        if (isFunction(urlOrPathOrOptionsOrOverwriteGlobalOptions))\n            return urlOrPathOrOptionsOrOverwriteGlobalOptions;\n        if (isFunction(optionsOrOverwriteGlobalOrDeps))\n            return optionsOrOverwriteGlobalOrDeps;\n    }, []);\n    var options = useMemo(function () {\n        var localOptions = { headers: {} };\n        if (isObject(urlOrPathOrOptionsOrOverwriteGlobalOptions)) {\n            localOptions = urlOrPathOrOptionsOrOverwriteGlobalOptions;\n        }\n        else if (isObject(optionsOrOverwriteGlobalOrDeps)) {\n            localOptions = optionsOrOverwriteGlobalOrDeps;\n        }\n        var globalOptions = context.options;\n        var finalOptions = __assign(__assign(__assign(__assign({}, defaults), globalOptions), localOptions), { headers: __assign(__assign(__assign({}, defaults.headers), globalOptions.headers), localOptions.headers), interceptors: __assign(__assign(__assign({}, defaults.interceptors), globalOptions.interceptors), localOptions.interceptors) });\n        if (overwriteGlobalOptions)\n            return overwriteGlobalOptions(finalOptions);\n        return finalOptions;\n    }, [urlOrPathOrOptionsOrOverwriteGlobalOptions, overwriteGlobalOptions, context.options]);\n    var requestInit = useMemo(function () { return pullOutRequestInit(options); }, [options]);\n    var dependencies = useMemo(function () {\n        if (Array.isArray(optionsOrOverwriteGlobalOrDeps))\n            return optionsOrOverwriteGlobalOrDeps;\n        if (Array.isArray(deps))\n            return deps;\n        return defaults.dependencies;\n    }, [optionsOrOverwriteGlobalOrDeps, deps]);\n    var cacheLife = options.cacheLife, retries = options.retries, retryDelay = options.retryDelay, retryOn = options.retryOn;\n    invariant(Number.isInteger(cacheLife) && cacheLife >= 0, '`cacheLife` must be a number >= 0');\n    invariant(Number.isInteger(retries) && retries >= 0, '`retries` must be a number >= 0');\n    invariant(isFunction(retryDelay) || Number.isInteger(retryDelay) && retryDelay >= 0, '`retryDelay` must be a positive number or a function returning a positive number.');\n    var isValidRetryOn = isFunction(retryOn) || (Array.isArray(retryOn) && retryOn.every(isPositiveNumber));\n    invariant(isValidRetryOn, '`retryOn` must be an array of positive numbers or a function returning a boolean.');\n    var loading = options.loading || Array.isArray(dependencies);\n    var interceptors = useMemo(function () {\n        var final = {};\n        if ('request' in options.interceptors)\n            final.request = options.interceptors.request;\n        if ('response' in options.interceptors)\n            final.response = options.interceptors.response;\n        return final;\n    }, [options]);\n    var customOptions = useMemo(function () {\n        var customOptionKeys = Object.keys(useFetchArgsDefaults.customOptions); // Array<keyof CustomOptions>\n        var customOptions = customOptionKeys.reduce(function (opts, key) {\n            opts[key] = options[key];\n            return opts;\n        }, {});\n        return __assign(__assign({}, customOptions), { interceptors: interceptors, loading: loading });\n    }, [interceptors, loading]);\n    return {\n        host: host,\n        path: path,\n        customOptions: customOptions,\n        requestInit: requestInit,\n        dependencies: dependencies\n    };\n}\n"]},"metadata":{},"sourceType":"module"}