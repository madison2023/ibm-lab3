{"ast":null,"code":"import React, { useMemo } from 'react';\nimport useSSR from 'use-ssr';\nimport FetchContext from './FetchContext';\nexport var Provider = function (_a) {\n  var url = _a.url,\n      options = _a.options,\n      _b = _a.graphql,\n      graphql = _b === void 0 ? false : _b,\n      children = _a.children;\n  var isBrowser = useSSR().isBrowser;\n  var defaults = useMemo(function () {\n    return {\n      url: url || (isBrowser ? window.location.origin : ''),\n      options: options || {},\n      graphql: graphql // TODO: this will make it so useFetch(QUERY || MUTATION) will work\n\n    };\n  }, [options, graphql, isBrowser, url]);\n  return React.createElement(FetchContext.Provider, {\n    value: defaults\n  }, children);\n};","map":{"version":3,"sources":["/Users/rachelmadison/lab-3-fixed-team-37/client/node_modules/use-http/dist/esm/Provider.js"],"names":["React","useMemo","useSSR","FetchContext","Provider","_a","url","options","_b","graphql","children","isBrowser","defaults","window","location","origin","createElement","value"],"mappings":"AAAA,OAAOA,KAAP,IAAgBC,OAAhB,QAA+B,OAA/B;AACA,OAAOC,MAAP,MAAmB,SAAnB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAO,IAAIC,QAAQ,GAAG,UAAUC,EAAV,EAAc;AAChC,MAAIC,GAAG,GAAGD,EAAE,CAACC,GAAb;AAAA,MAAkBC,OAAO,GAAGF,EAAE,CAACE,OAA/B;AAAA,MAAwCC,EAAE,GAAGH,EAAE,CAACI,OAAhD;AAAA,MAAyDA,OAAO,GAAGD,EAAE,KAAK,KAAK,CAAZ,GAAgB,KAAhB,GAAwBA,EAA3F;AAAA,MAA+FE,QAAQ,GAAGL,EAAE,CAACK,QAA7G;AACA,MAAIC,SAAS,GAAGT,MAAM,GAAGS,SAAzB;AACA,MAAIC,QAAQ,GAAGX,OAAO,CAAC,YAAY;AAAE,WAAQ;AACzCK,MAAAA,GAAG,EAAEA,GAAG,KAAKK,SAAS,GAAGE,MAAM,CAACC,QAAP,CAAgBC,MAAnB,GAA4B,EAA1C,CADiC;AAEzCR,MAAAA,OAAO,EAAEA,OAAO,IAAI,EAFqB;AAGzCE,MAAAA,OAAO,EAAEA,OAHgC,CAGxB;;AAHwB,KAAR;AAIhC,GAJiB,EAIf,CAACF,OAAD,EAAUE,OAAV,EAAmBE,SAAnB,EAA8BL,GAA9B,CAJe,CAAtB;AAKA,SAAQN,KAAK,CAACgB,aAAN,CAAoBb,YAAY,CAACC,QAAjC,EAA2C;AAAEa,IAAAA,KAAK,EAAEL;AAAT,GAA3C,EAAgEF,QAAhE,CAAR;AACH,CATM","sourcesContent":["import React, { useMemo } from 'react';\nimport useSSR from 'use-ssr';\nimport FetchContext from './FetchContext';\nexport var Provider = function (_a) {\n    var url = _a.url, options = _a.options, _b = _a.graphql, graphql = _b === void 0 ? false : _b, children = _a.children;\n    var isBrowser = useSSR().isBrowser;\n    var defaults = useMemo(function () { return ({\n        url: url || (isBrowser ? window.location.origin : ''),\n        options: options || {},\n        graphql: graphql // TODO: this will make it so useFetch(QUERY || MUTATION) will work\n    }); }, [options, graphql, isBrowser, url]);\n    return (React.createElement(FetchContext.Provider, { value: defaults }, children));\n};\n"]},"metadata":{},"sourceType":"module"}