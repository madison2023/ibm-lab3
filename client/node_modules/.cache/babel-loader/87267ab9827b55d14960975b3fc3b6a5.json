{"ast":null,"code":"var __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport { useContext, useCallback } from 'react';\nimport useFetch from './useFetch';\nimport { FetchContext } from './FetchContext';\nimport { invariant, isString, useURLRequiredInvariant } from './utils';\nexport var useQuery = function (urlOrQuery, queryArg) {\n  var context = useContext(FetchContext);\n  useURLRequiredInvariant(!!context.url && Array.isArray(urlOrQuery), 'useQuery');\n  useURLRequiredInvariant(!!context.url || isString(urlOrQuery) && !queryArg, 'useQuery', 'OR you need to do useQuery(\"https://example.com\", `your graphql query`)'); // regular no context: useQuery('https://example.com', `graphql QUERY`)\n\n  var url = urlOrQuery;\n  var QUERY = queryArg; // tagged template literal with context: useQuery`graphql QUERY`\n\n  if (Array.isArray(urlOrQuery) && context.url) {\n    invariant(!queryArg, 'You cannot have a 2nd argument when using tagged template literal syntax with useQuery.');\n    url = context.url;\n    QUERY = urlOrQuery[0]; // regular with context: useQuery(`graphql QUERY`)\n  } else if (urlOrQuery && !queryArg && context.url) {\n    url = context.url;\n    QUERY = urlOrQuery;\n  }\n\n  var _a = useFetch(url),\n      loading = _a.loading,\n      error = _a.error,\n      cache = _a.cache,\n      request = __rest(_a, [\"loading\", \"error\", \"cache\"]);\n\n  var query = useCallback(function (variables) {\n    return request.query(QUERY, variables);\n  }, [QUERY, request]);\n  var data = (request.data || {\n    data: undefined\n  }).data;\n  return Object.assign([data, loading, error, query], {\n    data: data,\n    loading: loading,\n    error: error,\n    query: query,\n    cache: cache\n  });\n};","map":{"version":3,"sources":["/Users/rachelmadison/lab-3-fixed-team-37/client/node_modules/use-http/dist/esm/useQuery.js"],"names":["__rest","s","e","t","p","Object","prototype","hasOwnProperty","call","indexOf","getOwnPropertySymbols","i","length","propertyIsEnumerable","useContext","useCallback","useFetch","FetchContext","invariant","isString","useURLRequiredInvariant","useQuery","urlOrQuery","queryArg","context","url","Array","isArray","QUERY","_a","loading","error","cache","request","query","variables","data","undefined","assign"],"mappings":"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","sourcesContent":["var __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport { useContext, useCallback } from 'react';\nimport useFetch from './useFetch';\nimport { FetchContext } from './FetchContext';\nimport { invariant, isString, useURLRequiredInvariant } from './utils';\nexport var useQuery = function (urlOrQuery, queryArg) {\n    var context = useContext(FetchContext);\n    useURLRequiredInvariant(!!context.url && Array.isArray(urlOrQuery), 'useQuery');\n    useURLRequiredInvariant(!!context.url || (isString(urlOrQuery) && !queryArg), 'useQuery', 'OR you need to do useQuery(\"https://example.com\", `your graphql query`)');\n    // regular no context: useQuery('https://example.com', `graphql QUERY`)\n    var url = urlOrQuery;\n    var QUERY = queryArg;\n    // tagged template literal with context: useQuery`graphql QUERY`\n    if (Array.isArray(urlOrQuery) && context.url) {\n        invariant(!queryArg, 'You cannot have a 2nd argument when using tagged template literal syntax with useQuery.');\n        url = context.url;\n        QUERY = urlOrQuery[0];\n        // regular with context: useQuery(`graphql QUERY`)\n    }\n    else if (urlOrQuery && !queryArg && context.url) {\n        url = context.url;\n        QUERY = urlOrQuery;\n    }\n    var _a = useFetch(url), loading = _a.loading, error = _a.error, cache = _a.cache, request = __rest(_a, [\"loading\", \"error\", \"cache\"]);\n    var query = useCallback(function (variables) { return request.query(QUERY, variables); }, [QUERY, request]);\n    var data = (request.data || { data: undefined }).data;\n    return Object.assign([data, loading, error, query], { data: data, loading: loading, error: error, query: query, cache: cache });\n};\n"]},"metadata":{},"sourceType":"module"}